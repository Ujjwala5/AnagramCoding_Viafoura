package com.viafoura.test;

import java.io.IOException;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.test.context.junit4.SpringRunner;
import org.springframework.web.client.RestTemplate;

import com.viafoura.dao.AnagramDao;
import com.viafoura.service.AnagramService;

@RunWith(SpringRunner.class)

@SpringBootTest
public class AnagramTest {
	
	
    @Autowired

    private AnagramService mangaService;
    
    @MockBean

    private RestTemplate template;

    @Test

    public void areAnagrams() throws IOException {

        // Parsing mock file

        MangaResult mRs = JsonUtils.jsonFile2Object("ken.json", MangaResult.class);

        // Mocking remote service

        when(template.getForEntity(any(String.class), any(Class.class))).thenReturn(new ResponseEntity(mRs, HttpStatus.OK));

        // I search for goku but system will use mocked response containing only ken, so I can check that mock is used.

        List<Manga> mangasByTitle = mangaService.getMangasByTitle("goku");

        assertThat(mangasByTitle).isNotNull()

            .isNotEmpty()

            .allMatch(p -> p.getTitle()

                .toLowerCase()

                .contains("ken"));

    }


}
